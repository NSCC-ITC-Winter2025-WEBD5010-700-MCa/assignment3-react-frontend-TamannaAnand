{
  "C:\\Users\\Anand\\OneDrive\\Desktop\\Personal\\Course Work\\WEBD5010\\assignment3-react-frontend-TamannaAnand\\Phase1\\serverless.yml": {
    "versionFramework": "4.7.0",
    "servicePath": "C:\\Users\\Anand\\OneDrive\\Desktop\\Personal\\Course Work\\WEBD5010\\assignment3-react-frontend-TamannaAnand\\Phase1\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "nscc123",
      "service": "Phase1",
      "plugins": [
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "runtime": "nodejs20.x",
        "environment": {
          "MONGODB_URI": "mongodb+srv://anandtamanna9:wgLz8akLFmxyqpBw@cluster0.xuga9.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
        },
        "httpApi": {
          "cors": {
            "allowedOrigins": [
              "*"
            ],
            "allowedMethods": [
              "GET",
              "POST",
              "DELETE",
              "PATCH",
              "OPTIONS"
            ],
            "allowedHeaders": [
              "*"
            ]
          }
        }
      },
      "functions": {
        "create": {
          "handler": "createItemFunction/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/create",
                "method": "post"
              }
            }
          ]
        },
        "delete": {
          "handler": "deleteItemFunction/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/delete",
                "method": "delete"
              }
            }
          ]
        },
        "getAll": {
          "handler": "getAllItemsFunction/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/get",
                "method": "get"
              }
            }
          ]
        },
        "getOne": {
          "handler": "getOneItemFunction/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/getOne",
                "method": "get"
              }
            }
          ]
        },
        "update": {
          "handler": "updateItemFunction/index.handler",
          "events": [
            {
              "httpApi": {
                "path": "/update",
                "method": "patch"
              }
            },
            {
              "httpApi": {
                "path": "/update",
                "method": "options"
              }
            }
          ]
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "environment": {
        "MONGODB_URI": "mongodb+srv://anandtamanna9:wgLz8akLFmxyqpBw@cluster0.xuga9.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"
      },
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "*"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "DELETE",
            "PATCH",
            "OPTIONS"
          ],
          "allowedHeaders": [
            "*"
          ]
        }
      }
    },
    "serviceRawFile": "org: nscc123 # The Serverless org ID (org in the Serverless Framework)\r\nservice: Phase1 # The service name (project name)\r\nplugins:\r\n  - serverless-offline\r\n\r\nprovider:\r\n  name: aws # Provider is AWS\r\n  runtime: nodejs20.x # Runtime environment for Lambda functions\r\n  environment:\r\n    MONGODB_URI: mongodb+srv://anandtamanna9:wgLz8akLFmxyqpBw@cluster0.xuga9.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0\r\n  httpApi:\r\n    cors:\r\n      allowedOrigins:\r\n        - '*'\r\n      allowedMethods:\r\n        - GET\r\n        - POST\r\n        - DELETE\r\n        - PATCH\r\n        - OPTIONS\r\n      allowedHeaders:\r\n        - '*'\r\n\r\nfunctions:\r\n  create:\r\n    handler: createItemFunction/index.handler # Path to 'create' function handler\r\n    events:\r\n      - httpApi: # Define HTTP API event for the 'create' function\r\n          path: /create\r\n          method: post\r\n\r\n  delete:\r\n    handler: deleteItemFunction/index.handler # Path to 'delete' function handler\r\n    events:\r\n      - httpApi: # Define HTTP API event for the 'delete' function\r\n          path: /delete\r\n          method: delete\r\n\r\n  getAll:\r\n    handler: getAllItemsFunction/index.handler # Path to 'getAll' function handler\r\n    events:\r\n      - httpApi: # Define HTTP API event for the 'getAll' function\r\n          path: /get\r\n          method: get\r\n\r\n  getOne:\r\n    handler: getOneItemFunction/index.handler # Path to 'getOne' function handler\r\n    events:\r\n      - httpApi: # Define HTTP API event for the 'getOne' function\r\n          path: /getOne\r\n          method: get\r\n\r\n  update:\r\n    handler: updateItemFunction/index.handler # Path to 'update' function handler\r\n    events:\r\n      - httpApi: # Define HTTP API event for the 'update' function\r\n          path: /update\r\n          method: patch\r\n      - httpApi:  # âœ… Explicitly define OPTIONS for CORS preflight\r\n          path: /update\r\n          method: options",
    "command": [],
    "options": {
      "verbose": true
    },
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:156041424992:stack/Phase1-dev/9eb03320-da6e-11ef-9619-0afffd03a6d5",
    "serviceProviderAwsCfStackCreated": "2025-01-24T16:16:51.648Z",
    "serviceProviderAwsCfStackUpdated": "2025-02-25T16:35:31.091Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetOneLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:156041424992:function:Phase1-dev-getOne:45",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Phase1-dev-GetOneLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetAllLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:156041424992:function:Phase1-dev-getAll:45",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Phase1-dev-GetAllLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:156041424992:function:Phase1-dev-delete:61",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Phase1-dev-DeleteLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:156041424992:function:Phase1-dev-create:61",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Phase1-dev-CreateLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:156041424992:function:Phase1-dev-update:61",
        "Description": "Current Lambda function version",
        "ExportName": "sls-Phase1-dev-UpdateLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "36sjcqdtk5",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-Phase1-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-ebf1a3db-45cb",
        "ExportName": "sls-Phase1-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://36sjcqdtk5.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-Phase1-dev-HttpApiUrl"
      }
    ]
  }
}